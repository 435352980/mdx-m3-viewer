// Copyright (c) 2013 Chananya Freiman (aka GhostWolf)

var SHADERS = {
	"vsbonetexture":"\n#define PG texture2D\nuniform sampler2D u_bones;uniform float u_bone_size,u_pixel_size;mat4 A(float a){float b=a*u_bone_size;return mat4(PG(u_bones,vec2(a*u_bone_size,0)),PG(u_bones,vec2(b+u_pixel_size,0)),PG(u_bones,vec2(b+u_pixel_size*2.,0)),PG(u_bones,vec2(b+u_pixel_size*3.,0)));}",
	"vsworld":"uniform mat4 u_mvp;uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;varying vec2 L;void main(){L=a_uv+u_uv_offset;gl_Position=u_mvp*vec4(a_position,1);}",
	"vswhite":"uniform mat4 u_mvp;attribute vec3 a_position;void main(){gl_Position=u_mvp*vec4(a_position,1);}",
	"psworld":"uniform sampler2D u_texture;uniform float u_a;varying vec2 L;void main(){gl_FragColor=vec4(texture2D(u_texture,L).rgb,u_a);}",
	"pswhite":"void main(){gl_FragColor=vec4(1);}",
	"wvsskinning":"\n#define R attribute\nuniform mat4 u_mvp;uniform vec2 u_uv_offset;R vec3 a_position;R vec2 a_uv;R vec4 a_bones;R float a_bone_number;varying vec2 L;void main(){vec4 b=vec4(a_position,1);vec4 a=(A(a_bones[0])*b+A(a_bones[1])*b+A(a_bones[2])*b+A(a_bones[3])*b)/a_bone_number;L=a_uv+u_uv_offset;gl_Position=u_mvp*a;}",
	"wvssoftskinning":"uniform mat4 u_mvp;uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;varying vec2 L;void main(){L=a_uv+u_uv_offset;gl_Position=u_mvp*vec4(a_position,1);}",
	"wvsparticles":"\n#define R attribute\nuniform mat4 u_mvp;R vec3 a_position;R vec2 a_uv;R vec4 a_color;varying vec2 L;varying vec4 M;void main(){L=a_uv;M=a_color;gl_Position=u_mvp*vec4(a_position,1);}",
	"wpsmain":"uniform sampler2D u_texture;uniform bvec3 u_type;uniform vec4 u_modifier;varying vec3 N;varying vec2 L;void main(){vec4 a=texture2D(u_texture,L);if(u_type[0]&&a.a<.7){discard;}if(u_type[1]&&a.r<.2&&a.g<.2&&a.b<.2){discard;}if(u_type[2]&&a.r>.9&&a.g>.9&&a.b>.9){discard;}gl_FragColor=a*u_modifier;}",
	"wpsparticles":"uniform sampler2D u_texture;varying vec2 L;varying vec4 M;void main(){gl_FragColor=texture2D(u_texture,L)*M;}",
	"svscommon":"vec3 B(vec3 d,vec3 c,vec3 a,vec3 b){vec3 e;e.x=dot(d,c);e.y=dot(d,a);e.z=dot(d,b);return e;}",
	"svsstandard":"\n#define R attribute\n#define CH vec3\n#define CI vec4\n#define MA normalize\nuniform mat4 u_mvp,u_mv;uniform CH u_eyePos,u_lightPos;R CH a_position;R CI a_normal,a_tangent,a_bones,a_weights;R vec2 a_uv0;varying CH N,O,P,Q;varying vec2 L[4];\n#ifdef EXPLICITUV1\nR vec2 a_uv1;\n#endif\n#ifdef EXPLICITUV2\nR vec2 a_uv1,a_uv2;\n#endif\n#ifdef EXPLICITUV3\nR vec2 a_uv1,a_uv2,a_uv3;\n#endif\nvoid C(CH c,CH b,CH d,CI a,CI h,out CH f,out CH e,out CH g){CI j=CI(c,1);CI i=CI(b,0);CI k=CI(d,0);CI l;mat4 m=A(a[0])*h[0];mat4 n=A(a[1])*h[1];mat4 o=A(a[2])*h[2];mat4 p=A(a[3])*h[3];l=CI(0);l+=m*j;l+=n*j;l+=o*j;l+=p*j;f=CH(l);l=CI(0);l+=m*i;l+=n*i;l+=o*i;l+=p*i;e=MA(CH(l));l=CI(0);l+=m*k;l+=n*k;l+=o*k;l+=p*k;g=MA(CH(l));}void main(){CH h,g,k;C(a_position,CH(a_normal),CH(a_tangent),a_bones,a_weights,h,g,k);mat3 e=mat3(u_mv);CH i=(u_mv*CI(h,1)).xyz;CH f=MA(e*g);CH j=MA(e*k);CH a=MA(cross(f,j)*a_normal.w);CH d=MA(u_lightPos-i);O=MA(B(d,j,a,f));CH b=MA(u_eyePos-i);CH c=MA(b-u_lightPos);P=B(b,j,a,f);Q=B(c,j,a,f);N=f;L[0]=a_uv0;\n#ifdef EXPLICITUV1\nL[1]=a_uv1;\n#endif\n#ifdef EXPLICITUV2\nL[1]=a_uv1;L[2]=a_uv2;\n#endif\n#ifdef EXPLICITUV3\nL[1]=a_uv1;L[2]=a_uv2;L[3]=a_uv3;\n#endif\ngl_Position=u_mvp*CI(h*1.,1);}",
	"spscommon":"\n#define AT else\n#define BH return\n#define CI vec4\n#define DB sampler2D\nuniform vec3 u_teamColor;varying vec3 N,O,P,Q;varying vec2 L[4];struct K{bool enabled,invert,clampResult;float op,channels,teamColorMode,uvCoordinate;};vec3 D(CI a,vec3 c,K b){if(b.op==.0){c*=a.rgb;}AT if(b.op==1.){c*=a.rgb*2.;}AT if(b.op==2.){c+=a.rgb*a.a;}AT if(b.op==6.){c+=a.rgb;}AT if(b.op==3.){c=mix(c,a.rgb,a.a);}AT if(b.op==4.){c+=a.a*u_teamColor;}AT if(b.op==5.){c+=a.a*u_teamColor;}BH c;}CI E(float a,CI b){if(a==3.){b=b.rrrr;}AT if(a==4.){b=b.gggg;}AT if(a==5.){b=b.bbbb;}AT if(a==2.){b=b.aaaa;}AT if(a==.0){b.a=1.;}BH b;}vec2 F(K a){if(a.uvCoordinate==1.){BH L[1];}AT if(a.uvCoordinate==2.){BH L[2];}AT if(a.uvCoordinate==3.){BH L[3];}BH L[0];}CI G(DB a,K b){BH texture2D(a,F(b));}CI H(DB a,K b){CI d=G(a,b);CI c=E(b.channels,d);if(b.teamColorMode==1.){c=CI(mix(u_teamColor,c.rgb,d.a),1);}AT if(b.teamColorMode==2.){c=CI(mix(u_teamColor,c.rgb,d.a),1);}if(b.invert){c=CI(1)-c;}if(b.clampResult){c=clamp(c,.0,1.);}BH c;}vec3 I(DB a){CI c=texture2D(a,L[0]);vec3 b;b.xy=2.*c.wy-1.;b.z=sqrt(max(.0,1.-dot(b.xy,b.xy)));BH b;}CI J(DB d,K a,float e,float c,vec3 b){CI f;if(a.enabled){f=H(d,a);}AT{f=CI(0);}float g=pow(max(-dot(Q,b),.0),e)*c;BH f*g;}",
	"spsstandard":"\n#define T uniform\nT float u_specularity,u_specMult,u_emisMult;T vec4 u_lightAmbient;T K u_diffuseLayerSettings,u_decalLayerSettings,u_specularLayerSettings,u_glossLayerSettings,u_emissiveLayerSettings,u_emissive2LayerSettings,u_evioLayerSettings,u_evioMaskLayerSettings,u_alphaLayerSettings,u_alphaMaskLayerSettings,u_normalLayerSettings,u_heightLayerSettings,u_lightMapLayerSettings,u_aoLayerSettings;T sampler2D u_diffuseMap,u_decalMap,u_specularMap,u_glossMap,u_emissiveMap,u_emissive2Map,u_evioMap,u_evioMaskMap,u_alphaMap,u_alphaMaskMap,u_normalMap,u_heightMap,u_lightMapMap,u_aoMap;void main(){vec3 b;vec4 f=u_lightAmbient;vec3 j;vec3 i;if(u_normalLayerSettings.enabled){j=I(u_normalMap);}else{j=N;}float g=max(dot(j,O),.0);if(g>.0){if(u_diffuseLayerSettings.enabled){vec4 d=H(u_diffuseMap,u_diffuseLayerSettings);b=D(d,b,u_diffuseLayerSettings);}if(u_decalLayerSettings.enabled){vec4 c=H(u_decalMap,u_decalLayerSettings);b=D(c,b,u_decalLayerSettings);}vec4 k=J(u_specularMap,u_specularLayerSettings,u_specularity,u_specMult,j);if(u_lightMapLayerSettings.enabled){vec4 h=H(u_lightMapMap,u_lightMapLayerSettings)*2.;i=h.rgb;}f.rgb=(b+k.rgb)*g;bool a=false;vec3 e;vec4 l;if(u_emissiveLayerSettings.enabled){l=H(u_emissiveMap,u_emissiveLayerSettings);if(u_emissiveLayerSettings.op==.0||u_emissiveLayerSettings.op==1.||u_emissiveLayerSettings.op==3.){f.rgb=D(l,f.rgb,u_emissiveLayerSettings);}else{e=D(l,e,u_emissiveLayerSettings);a=true;}}if(u_emissive2LayerSettings.enabled){l=H(u_emissive2Map,u_emissive2LayerSettings);if(!a&&(u_emissive2LayerSettings.op==.0||u_emissive2LayerSettings.op==1.||u_emissive2LayerSettings.op==3.)){f.rgb=D(l,f.rgb,u_emissive2LayerSettings);}else{e=D(l,e,u_emissive2LayerSettings);a=true;}}if(a){f.rgb+=e*u_emisMult;}}gl_FragColor=f;}",
	"spsspecialized":"\n#define T uniform\n#define DB sampler2D\n#ifdef DIFFUSE_PASS\nT K u_diffuseLayerSettings;T DB u_diffuseMap;\n#endif\n#ifdef SPECULAR_PASS\nT K u_specularLayerSettings;T DB u_specularMap;T float u_specularity,u_specMult;\n#endif\n#ifdef HIGHRES_NORMALS\nT K u_normalLayerSettings;T DB u_normalMap;\n#endif\n#ifdef EMISSIVE_PASS\nT K u_emissiveLayerSettings,u_emissive2LayerSettings;T DB u_emissiveMap,u_emissive2Map;T float u_emisMult;\n#endif\n#ifdef DECAL_PASS\nT K u_decalLayerSettings;T DB u_decalMap;\n#endif\nvoid main(){vec4 b=vec4(0);vec3 f;\n#ifdef HIGHRES_NORMALS\nf=I(u_normalMap);\n#else\nf=N;\n#endif\n#ifdef DIFFUSE_PASS\nb=H(u_diffuseMap,u_diffuseLayerSettings);\n#endif\n#ifdef NORMALS_PASS\nb=vec4(f,1);\n#endif\n#ifdef SPECULAR_PASS\nb=J(u_specularMap,u_specularLayerSettings,u_specularity,u_specMult,f);\n#endif\n#ifdef EMISSIVE_PASS\nbool a=false;vec3 d=vec3(0);vec4 g;if(u_emissiveLayerSettings.enabled){g=H(u_emissiveMap,u_emissiveLayerSettings);if(u_emissiveLayerSettings.op==.0||u_emissiveLayerSettings.op==1.||u_emissiveLayerSettings.op==3.){b.rgb=D(g,b.rgb,u_emissiveLayerSettings);}else{d=D(g,d,u_emissiveLayerSettings);a=true;}}if(u_emissive2LayerSettings.enabled){g=H(u_emissive2Map,u_emissive2LayerSettings);if(!a&&(u_emissive2LayerSettings.op==.0||u_emissive2LayerSettings.op==1.||u_emissive2LayerSettings.op==3.)){b.rgb=D(g,b.rgb,u_emissive2LayerSettings);}else{d=D(g,d,u_emissive2LayerSettings);a=true;}}if(a){b.rgb+=d.rgb*u_emisMult;}\n#endif\n#ifdef UNSHADED_PASS\nfloat e=max(dot(f,O),.0);b=vec4(e,e,e,1);\n#endif\n#ifdef DECAL_PASS\nif(u_decalLayerSettings.enabled){vec4 c=H(u_decalMap,u_decalLayerSettings);b.rgb=D(c,b.rgb,u_decalLayerSettings);b.a=1.;}\n#endif\ngl_FragColor=b;}",
	"svsparticles":"uniform mat4 u_mvp;attribute vec3 a_position;void main(){gl_Position=u_mvp*vec4(a_position,1);}",
	"spsparticles":"void main(){gl_FragColor=vec4(1);}"
};