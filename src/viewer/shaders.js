// Copyright (c) 2013 Chananya Freiman (aka GhostWolf)

var SHADERS = {
	"vsbonetexture":"uniform sampler2D u_bones;uniform float u_bone_size;uniform float u_pixel_size;mat4 boneAtIndex(float A){return mat4(texture2D(u_bones,vec2(A*u_bone_size,0)),texture2D(u_bones,vec2(A*u_bone_size+u_pixel_size,0)),texture2D(u_bones,vec2(A*u_bone_size+u_pixel_size*2.0,0)),texture2D(u_bones,vec2(A*u_bone_size+u_pixel_size*3.0,0)));}",
	"vsworld":"uniform mat4 u_mvp;uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;varying vec2 v_uv;void main(){v_uv=a_uv+u_uv_offset;gl_Position=u_mvp*vec4(a_position,1);}",
	"vswhite":"uniform mat4 u_mvp;attribute vec3 a_position;void main(){gl_Position=u_mvp*vec4(a_position,1);}",
	"psworld":"uniform sampler2D u_texture;uniform float u_a;varying vec2 v_uv;void main(){gl_FragColor=vec4(texture2D(u_texture,v_uv).rgb,u_a);}",
	"pswhite":"void main(){gl_FragColor=vec4(1);}",
	"wvssoftskinning":"uniform mat4 u_mvp;uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;varying vec2 v_uv;void main(){v_uv=a_uv+u_uv_offset;gl_Position=u_mvp*vec4(a_position,1);}",
	"wvshardskinningarray":"uniform mat4 u_mvp;uniform mat4 u_bones[62];uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;attribute vec4 a_bones;attribute float a_bone_number;varying vec2 v_uv;void main(){vec4 A=vec4(0);vec4 B=vec4(a_position,1);A+=u_bones[int(a_bones[0])]*B;A+=u_bones[int(a_bones[1])]*B;A+=u_bones[int(a_bones[2])]*B;A+=u_bones[int(a_bones[3])]*B;A/=a_bone_number;v_uv=a_uv+u_uv_offset;gl_Position=u_mvp*A;}",
	"wvshardskinningtexture":"uniform mat4 u_mvp;uniform vec2 u_uv_offset;attribute vec3 a_position;attribute vec2 a_uv;attribute vec4 a_bones;attribute float a_bone_number;varying vec2 v_uv;void main(){vec4 A=vec4(0);vec4 B=vec4(a_position,1);A+=boneAtIndex(a_bones[0])*B;A+=boneAtIndex(a_bones[1])*B;A+=boneAtIndex(a_bones[2])*B;A+=boneAtIndex(a_bones[3])*B;A/=a_bone_number;v_uv=a_uv+u_uv_offset;gl_Position=u_mvp*A;}",
	"wvsparticles":"uniform mat4 u_mvp;attribute vec3 a_position;attribute vec2 a_uv;attribute vec4 a_color;varying vec2 v_uv;varying vec4 v_color;void main(){v_uv=a_uv;v_color=a_color;gl_Position=u_mvp*vec4(a_position,1);}",
	"wpsmain":"uniform sampler2D u_texture;uniform bvec3 u_type;uniform vec4 u_modifier;varying vec3 v_normal;varying vec2 v_uv;void main(){vec4 A=texture2D(u_texture,v_uv);if(u_type[0]&&A.a<.7){discard;}if(u_type[1]&&A.r<.2&&A.g<.2&&A.b<.2){discard;}if(u_type[2]&&A.r>.9&&A.g>.9&&A.b>.9){discard;}gl_FragColor=A*u_modifier;}",
	"wpsparticles":"uniform sampler2D u_texture;varying vec2 v_uv;varying vec4 v_color;void main(){gl_FragColor=texture2D(u_texture,v_uv)*v_color;}",
	"svscommon":"vec3 TBN(vec3 A,vec3 B,vec3 C,vec3 D){vec3 E;E.x=dot(A,B);E.y=dot(A,C);E.z=dot(A,D);return E;}",
	"svsstandard":"uniform mat4 u_mvp;uniform mat4 u_mv;uniform vec3 u_eyePos;uniform vec3 u_lightPos;attribute vec3 a_position;attribute vec4 a_normal;attribute vec2 a_uv0;\n#ifdef EXPLICITUV1\nattribute vec2 a_uv1;\n#endif\n#ifdef EXPLICITUV2\nattribute vec2 a_uv1;attribute vec2 a_uv2\n#endif\n#ifdef EXPLICITUV3\nattribute vec2 a_uv1;attribute vec2 a_uv2attribute vec2 a_uv3\n#endif\nattribute vec4 a_tangent;attribute vec4 a_bones;attribute vec4 a_weights;varying vec3 v_normal;varying vec2 v_uv[4];varying vec3 v_lightDir;varying vec3 v_eyeVec;varying vec3 v_halfVec;void transform(vec3 A,vec3 B,vec3 C,vec4 D,vec4 E,out vec3 F,out vec3 G,out vec3 H){vec4 I=vec4(A,1);vec4 J=vec4(B,0);vec4 K=vec4(C,0);vec4 L;mat4 M=boneAtIndex(D[0])*E[0];mat4 N=boneAtIndex(D[1])*E[1];mat4 O=boneAtIndex(D[2])*E[2];mat4 P=boneAtIndex(D[3])*E[3];L=vec4(0);L+=M*I;L+=N*I;L+=O*I;L+=P*I;F=vec3(L);L=vec4(0);L+=M*J;L+=N*J;L+=O*J;L+=P*J;G=normalize(vec3(L));L=vec4(0);L+=M*K;L+=N*K;L+=O*K;L+=P*K;H=normalize(vec3(L));}void main(){vec3 A,B,C;transform(a_position,vec3(a_normal),vec3(a_tangent),a_bones,a_weights,A,B,C);mat3 D=mat3(u_mv);vec3 E=(u_mv*vec4(A,1)).xyz;vec3 F=normalize(D*B);vec3 G=normalize(D*C);vec3 H=normalize(cross(F,G)*a_normal.w);vec3 I=normalize(u_lightPos-E);v_lightDir=normalize(TBN(I,G,H,F));vec3 J=normalize(u_eyePos-E);vec3 K=normalize(J-u_lightPos);v_eyeVec=TBN(J,G,H,F);v_halfVec=TBN(K,G,H,F);v_normal=F;v_uv[0]=a_uv0;\n#ifdef EXPLICITUV1\nv_uv[1]=a_uv1;\n#endif\n#ifdef EXPLICITUV2\nv_uv[1]=a_uv1;v_uv[2]=a_uv2;\n#endif\n#ifdef EXPLICITUV3\nv_uv[1]=a_uv1;v_uv[2]=a_uv2;v_uv[3]=a_uv3;\n#endif\ngl_Position=u_mvp*vec4(A,1);}",
	"spscommon":"uniform vec3 u_teamColor;varying vec3 v_normal;varying vec2 v_uv[4];varying vec3 v_lightDir;varying vec3 v_eyeVec;varying vec3 v_halfVec;struct LayerSettings{bool enabled;float op;float channels;float teamColorMode;vec3 multAddAlpha;bool useAlphaFactor;bool invert;bool multColor;bool addColor;bool clampResult;bool useConstantColor;vec4 constantColor;float uvSource;float uvCoordinate;float fresnelMode;float fresnelTransformMode;mat4 fresnelTransform;bool fresnelClamp;vec3 fresnelExponentBiasScale;};\n#define SPECULAR_RGB 0.0\n#define SPECULAR_A_ONLY 1.0\n#define FRESNELMODE_NONE 0.0\n#define FRESNELMODE_STANDARD 1.0\n#define FRESNELMODE_INVERTED 2.0\n#define FRESNELTRANSFORM_NONE 0.0\n#define FRESNELTRANSFORM_SIMPLE 1.0\n#define FRESNELTRANSFORM_NORMALIZED 2.0\n#define UVMAP_EXPLICITUV0 0.0\n#define UVMAP_EXPLICITUV1 1.0\n#define UVMAP_REFLECT_CUBICENVIO 2.0\n#define UVMAP_REFLECT_SPHERICALENVIO 3.0\n#define UVMAP_PLANARLOCALZ 4.0\n#define UVMAP_PLANARWORLDZ 5.0\n#define UVMAP_PARTICLE_FLIPBOOK 6.0\n#define UVMAP_CUBICENVIO 7.0\n#define UVMAP_SPHERICALENVIO 8.0\n#define UVMAP_EXPLICITUV2 9.0\n#define UVMAP_EXPLICITUV3 10.0\n#define UVMAP_PLANARLOCALX 11.0\n#define UVMAP_PLANARLOCALY 12.0\n#define UVMAP_PLANARWORLDX 13.0\n#define UVMAP_PLANARWORLDY 14.0\n#define UVMAP_SCREENSPACE 15.0\n#define UVMAP_TRIPLANAR_LOCAL 16.0\n#define UVMAP_TRIPLANAR_WORLD 17.0\n#define UVMAP_TRIPLANAR_WORLD_LOCAL_Z 18.0\n#define CHANNELSELECT_RGB 0.0\n#define CHANNELSELECT_RGBA 1.0\n#define CHANNELSELECT_A 2.0\n#define CHANNELSELECT_R 3.0\n#define CHANNELSELECT_G 4.0\n#define CHANNELSELECT_B 5.0\n#define TEAMCOLOR_NONE 0.0\n#define TEAMCOLOR_DIFFUSE 1.0\n#define TEAMCOLOR_EMISSIVE 2.0\n#define LAYEROP_MOD 0.0\n#define LAYEROP_MOD2X 1.0\n#define LAYEROP_ADD 2.0\n#define LAYEROP_LERP 3.0\n#define LAYEROP_TEAMCOLOR_EMISSIVE_ADD 4.0\n#define LAYEROP_TEAMCOLOR_DIFFUSE_ADD 5.0\n#define LAYEROP_ADD_NO_ALPHA 6.0\nfloat calculateFresnelTerm(vec3 A,vec3 B,float C,mat4 D,float E,bool F){vec3 G=B;float H;if(E!=FRESNELTRANSFORM_NONE){G=(D*vec4(G,1.0)).xyz;if(E==FRESNELTRANSFORM_NORMALIZED){G=normalize(G);}}if(F){H=1.0-clamp(-dot(A,G),.0,1.0);}else{H=1.0-abs(dot(A,G));}H=max(H,.0000001);return pow(H,C);}vec3 combineLayerColor(vec4 A,vec3 B,LayerSettings C){if(C.op==LAYEROP_MOD){B*=A.rgb;}else if(C.op==LAYEROP_MOD2X){B*=A.rgb*2.0;}else if(C.op==LAYEROP_ADD){B+=A.rgb*A.a;}else if(C.op==LAYEROP_ADD_NO_ALPHA){B+=A.rgb;}else if(C.op==LAYEROP_LERP){B=mix(B,A.rgb,A.a);}else if(C.op==LAYEROP_TEAMCOLOR_EMISSIVE_ADD){B+=A.a*u_teamColor;}else if(C.op==LAYEROP_TEAMCOLOR_DIFFUSE_ADD){B+=A.a*u_teamColor;}return B;}vec4 chooseChannel(float A,vec4 B){if(A==CHANNELSELECT_R){B=B.rrrr;}else if(A==CHANNELSELECT_G){B=B.gggg;}else if(A==CHANNELSELECT_B){B=B.bbbb;}else if(A==CHANNELSELECT_A){B=B.aaaa;}else if(A==CHANNELSELECT_RGB){B.a=1.0;}return B;}vec2 getUV(LayerSettings A){if(A.uvCoordinate==1.0){return v_uv[1];}else if(A.uvCoordinate==2.0){return v_uv[2];}else if(A.uvCoordinate==3.0){return v_uv[3];}return v_uv[0];}vec4 sampleLayer(sampler2D A,LayerSettings B){if(B.useConstantColor&&false){return B.constantColor;}return texture2D(A,getUV(B));}vec4 computeLayerColor(sampler2D A,LayerSettings B){vec4 C=sampleLayer(A,B);vec4 D=chooseChannel(B.channels,C);if(B.useAlphaFactor&&false){D.a*=B.multAddAlpha.z;}if(B.teamColorMode==TEAMCOLOR_DIFFUSE){D=vec4(mix(u_teamColor,D.rgb,C.a),1);}else if(B.teamColorMode==TEAMCOLOR_EMISSIVE){D=vec4(mix(u_teamColor,D.rgb,C.a),1);}if(B.invert){D=vec4(1)-D;}if(B.multColor&&false){D*=B.multAddAlpha.x;}if(B.addColor&&false){D+=B.multAddAlpha.y;}if(B.clampResult){D=clamp(D,.0,1.0);}if(B.fresnelMode!=FRESNELMODE_NONE){float E=calculateFresnelTerm(v_normal,v_eyeVec,B.fresnelExponentBiasScale.x,B.fresnelTransform,B.fresnelTransformMode,B.fresnelClamp);if(B.fresnelMode==FRESNELMODE_INVERTED){E=1.0-E;}E=clamp(E*B.fresnelExponentBiasScale.z+B.fresnelExponentBiasScale.y,.0,1.0);D*=E;}return D;}vec3 decodeNormal(sampler2D A){vec4 B=texture2D(A,v_uv[0]);vec3 C;C.xy=2.0*B.wy-1.0;C.z=sqrt(max(.0,1.0-dot(C.xy,C.xy)));return C;}vec4 computeSpecular(sampler2D A,LayerSettings B,float C,float D,vec3 E){vec4 F;if(B.enabled){F=computeLayerColor(A,B);}else{F=vec4(0);}float G=pow(max(-dot(v_halfVec,E),.0),C)*D;return F*G;}",
	"spsstandard":"uniform float u_specularity;uniform float u_specMult;uniform float u_emisMult;uniform vec4 u_lightAmbient;uniform LayerSettings u_diffuseLayerSettings;uniform sampler2D u_diffuseMap;uniform LayerSettings u_decalLayerSettings;uniform sampler2D u_decalMap;uniform LayerSettings u_specularLayerSettings;uniform sampler2D u_specularMap;uniform LayerSettings u_glossLayerSettings;uniform sampler2D u_glossMap;uniform LayerSettings u_emissiveLayerSettings;uniform sampler2D u_emissiveMap;uniform LayerSettings u_emissive2LayerSettings;uniform sampler2D u_emissive2Map;uniform LayerSettings u_evioLayerSettings;uniform sampler2D u_evioMap;uniform LayerSettings u_evioMaskLayerSettings;uniform sampler2D u_evioMaskMap;uniform LayerSettings u_alphaLayerSettings;uniform sampler2D u_alphaMap;uniform LayerSettings u_alphaMaskLayerSettings;uniform sampler2D u_alphaMaskMap;uniform LayerSettings u_normalLayerSettings;uniform sampler2D u_normalMap;uniform LayerSettings u_heightLayerSettings;uniform sampler2D u_heightMap;uniform LayerSettings u_lightMapLayerSettings;uniform sampler2D u_lightMapMap;uniform LayerSettings u_aoLayerSettings;uniform sampler2D u_aoMap;void main(){vec3 A;vec4 B=u_lightAmbient;vec3 C;vec3 D;if(u_normalLayerSettings.enabled){C=decodeNormal(u_normalMap);}else{C=v_normal;}float E=max(dot(C,v_lightDir),.0);if(E>.0){if(u_diffuseLayerSettings.enabled){vec4 F=computeLayerColor(u_diffuseMap,u_diffuseLayerSettings);A=combineLayerColor(F,A,u_diffuseLayerSettings);}if(u_decalLayerSettings.enabled){vec4 G=computeLayerColor(u_decalMap,u_decalLayerSettings);A=combineLayerColor(G,A,u_decalLayerSettings);}vec4 H=computeSpecular(u_specularMap,u_specularLayerSettings,u_specularity,u_specMult,C);if(u_lightMapLayerSettings.enabled){vec4 I=computeLayerColor(u_lightMapMap,u_lightMapLayerSettings)*2.0;D=I.rgb;}/*B.rgb=A*D+H.rgb;*/B.rgb=(A+H.rgb)*E;bool J=false;vec3 K;vec4 L;if(u_emissiveLayerSettings.enabled){L=computeLayerColor(u_emissiveMap,u_emissiveLayerSettings);if(u_emissiveLayerSettings.op==LAYEROP_MOD||u_emissiveLayerSettings.op==LAYEROP_MOD2X||u_emissiveLayerSettings.op==LAYEROP_LERP){B.rgb=combineLayerColor(L,B.rgb,u_emissiveLayerSettings);}else{K=combineLayerColor(L,K,u_emissiveLayerSettings);J=true;}}if(u_emissive2LayerSettings.enabled){L=computeLayerColor(u_emissive2Map,u_emissive2LayerSettings);if(!J&&(u_emissive2LayerSettings.op==LAYEROP_MOD||u_emissive2LayerSettings.op==LAYEROP_MOD2X||u_emissive2LayerSettings.op==LAYEROP_LERP)){B.rgb=combineLayerColor(L,B.rgb,u_emissive2LayerSettings);}else{K=combineLayerColor(L,K,u_emissive2LayerSettings);J=true;}}if(J){B.rgb+=K*u_emisMult;}}gl_FragColor=B;}",
	"spsspecialized":"#ifdef DIFFUSE_PASS\nuniform LayerSettings u_diffuseLayerSettings;uniform sampler2D u_diffuseMap;\n#endif\n#ifdef SPECULAR_PASS\nuniform LayerSettings u_specularLayerSettings;uniform sampler2D u_specularMap;uniform float u_specularity;uniform float u_specMult;\n#endif\n#ifdef HIGHRES_NORMALS\nuniform LayerSettings u_normalLayerSettings;uniform sampler2D u_normalMap;\n#endif\n#ifdef EMISSIVE_PASS\nuniform LayerSettings u_emissiveLayerSettings;uniform sampler2D u_emissiveMap;uniform LayerSettings u_emissive2LayerSettings;uniform sampler2D u_emissive2Map;uniform float u_emisMult;\n#endif\n#ifdef DECAL_PASS\nuniform LayerSettings u_decalLayerSettings;uniform sampler2D u_decalMap;\n#endif\nvoid main(){vec4 A=vec4(0);vec3 B;\n#ifdef HIGHRES_NORMALS\nB=decodeNormal(u_normalMap);\n#else\nB=v_normal;\n#endif\n#ifdef DIFFUSE_PASS\nA=computeLayerColor(u_diffuseMap,u_diffuseLayerSettings);\n#endif\n#ifdef NORMALS_PASS\nA=vec4(B,1);\n#endif\n#ifdef SPECULAR_PASS\nA=computeSpecular(u_specularMap,u_specularLayerSettings,u_specularity,u_specMult,B);\n#endif\n#ifdef EMISSIVE_PASS\nbool C=false;vec3 D=vec3(0);vec4 E;if(u_emissiveLayerSettings.enabled){E=computeLayerColor(u_emissiveMap,u_emissiveLayerSettings);if(u_emissiveLayerSettings.op==LAYEROP_MOD||u_emissiveLayerSettings.op==LAYEROP_MOD2X||u_emissiveLayerSettings.op==LAYEROP_LERP){A.rgb=combineLayerColor(E,A.rgb,u_emissiveLayerSettings);}else{D=combineLayerColor(E,D,u_emissiveLayerSettings);C=true;}}if(u_emissive2LayerSettings.enabled){E=computeLayerColor(u_emissive2Map,u_emissive2LayerSettings);if(!C&&(u_emissive2LayerSettings.op==LAYEROP_MOD||u_emissive2LayerSettings.op==LAYEROP_MOD2X||u_emissive2LayerSettings.op==LAYEROP_LERP)){A.rgb=combineLayerColor(E,A.rgb,u_emissive2LayerSettings);}else{D=combineLayerColor(E,D,u_emissive2LayerSettings);C=true;}}if(C){A.rgb+=D.rgb*u_emisMult;}\n#endif\n#ifdef UNSHADED_PASS\nfloat F=max(dot(B,v_lightDir),.0);A=vec4(F,F,F,1);\n#endif\n#ifdef DECAL_PASS\nif(u_decalLayerSettings.enabled){vec4 G=computeLayerColor(u_decalMap,u_decalLayerSettings);A.rgb=combineLayerColor(G,A.rgb,u_decalLayerSettings);A.a=1.0;}\n#endif\ngl_FragColor=A;}"
};